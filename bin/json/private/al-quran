#!/usr/bin/env ruby
# frozen_string_literal: true

##
# This script requests each verse, from each chapter
# in The Qur'an in a language that is determined by
# its first two arguments. For example:
#
#   * ./al-quran pt portuguese
#   * ./al-quran fa farsi
#   * etc..

##
# Set process title - primarily for the "ps" command
Process.setproctitle("quran-pull (al-quran) (#{ARGV[1]})")

##
# Dependencies
require "bundler/setup"
require "net/http"
require "nokogiri"
require "json"
require "paint"
require "fileutils"
require_relative "../../../binlib/io/line"

##
# Configuration variables
base_uri = "al-quran.cc"
path = "/quran-translation/#{ARGV[1]}/%{chapter}/%{verse}.html"
dest = File.join("src", "json", ARGV[0], "%{chapter}.json")
delay = 0.5

##
# Chapter names
names = JSON.parse(
  File.read(
    File.join("bindata", "al-quran.cc", "chapter-names.json")
  )
)

##
# Map chapters to their verse count.
vmap_path = File.join("bindata", "chapters-length.json")
vmap = JSON.parse(File.read(vmap_path))

##
# Share a single Net::HTTP instance.
http = Net::HTTP.new(base_uri, 443)
http.use_ssl = true

##
# Utils
line = IO::Line.new($stdout)
find_content = ->(res) do
  doc = Nokogiri::HTML(res.body)
  doc.css(".ayah .translate").text
end

1.upto(114) do |chapter|
  line.rewind.print("Download chapter #{chapter}:").end
  rows = []
  vcount = vmap[chapter.to_s]
  1.upto(vcount) do |verse|
    res = http.request_get(format(path, chapter: names[chapter - 1], verse:))
    if Net::HTTPOK === res
      rows.push([verse, find_content.(res)])
      line.rewind.print("#{verse} of #{vcount} verses downloaded. ")
    else
      line.end.print(Paint["ABORT", :red, :bold])
          .end.print("Bad response: ", res.class)
          .end
      exit(1)
    end
    sleep(delay)
  end
  FileUtils.mkdir_p(File.dirname(dest))
  File.binwrite(format(dest, chapter:), JSON.pretty_generate(rows))
  line.end.print(Paint["Done.", :bold])
      .end.end
end
